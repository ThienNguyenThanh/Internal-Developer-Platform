app:
  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
  baseUrl: http://localhost:7007

auth:
  environment: production
  providers:
    github:
      production:
        clientId: ${BACKSTAGE_GITHUB_CLIENT_ID}
        clientSecret: ${BACKSTAGE_GITHUB_CLIENT_SECRET}

integrations:
  github:
    - host: github.com
      token: ${BACKSTAGE_GITHUB_TOKEN}



backend:
  auth:
    keys:
      - secret: ${BACKEND_SECRET}
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  baseUrl: http://localhost:7007
  # The listener can also be expressed as a single <host>:<port> string. In this case we bind to
  # all interfaces, the most permissive setting. The right value depends on your specific deployment.
  listen:
    port: ${PORT}

  # config options: https://node-postgres.com/api/client
  # database:
  #   client: pg
  #   connection:
  #     host: ${POSTGRES_HOST}
  #     port: ${POSTGRES_PORT}
  #     user: ${POSTGRES_USER}
  #     password: ${POSTGRES_PASSWORD}
      # https://node-postgres.com/features/ssl
      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      # ssl:
      #   ca: # if you have a CA file and want to verify it you can uncomment this section
      #     $file: <file-path>/ca/server.crt

catalog:
  # import:
  #   entityFilename: catalog-info.yaml
  #   pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, API, System, Domain, Resource, Location, User, Group]
  locations:
    # Backstage example components
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-components.yaml

    # Backstage example systems
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-systems.yaml

    # Backstage example APIs
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-apis.yaml

    # Backstage example organization groups
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme/org.yaml

    # Backstage example domains
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-domains.yaml

    # Backstage example resources
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-resources.yaml

    # The backstage demo deployment (this)
    - type: url
      target: https://github.com/backstage/demo/blob/master/catalog-info.yaml

    # The backstage library repository
    - type: url
      target: https://github.com/backstage/backstage/blob/master/catalog-info.yaml
    
    # Backstage template
    - type: file
      target: ./all-templates.yaml
      rules:
        - allow: [Template]
